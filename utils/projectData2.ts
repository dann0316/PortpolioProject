export const projectData2 = {
    myplanner: {
        title: "my planner",
        description: "React, TypeScript, Vite를 기반으로 제작한 개인 일정 관리 웹 애플리케이션입니다. 평소 종이로 작성하던 '오늘 공부 플래너'를 웹 애플리케이션으로 직접 구현하며, UI와 기능을 모두 직접 설계하고 개발하였습니다.",
        date: "2025.10 ~ 2024.11",
        function: "일간 / 주간 / 월간 단위로 할 일 등록 및 관리, 달력 안에 직접 일정 추가 및 확인, 시간별 계획을 시각적을 표현하는 UI제공, 날짜 골라서 주간 plnner UI, open api를 이용한 위치 중심 날씨 표현",
        skill: "프론트 엔트: React, TypeScript, Bootstrap, CSS Module / 빌드 도구: Vite / API 통신 도구: Fetch API, Axios",
        problem: "",
        solve: "",
        contribution: "100%",
        url: "https://github.com/dann0316/MyPlanner",
        sample:"/personal/myplanner.mp4",
    },
    shoeshop: {
        title: "shoe shop",
        description: "React 기반으로 제작한 신발 쇼핑몰 웹 애플리케이션입니다. 쇼핑몰에서 요구되는 기본적인 기능들을 직접 구현하며, 프론트엔드 구조 설계 및 상태 관리에 대한 이해를 높이기 위한 개인 프로젝트입니다.",
        date: "2024.09 ~ 2024.10",
        function: "상품 목록 조회, 상품 상세 페이지 확인, 장바구니 담기 및 수량 조절 및 삭제, 장바구니 내 상품 정렬 / 역정렬, 최근 본 상품 자동 저장 및 조회",
        skill: "프론트 엔드: React, Redux, Bootstrap / Data: Sample Data / 빌드 도구: CRA / API 통신 도구: Fetch API, Axios",
        problem: "컴포넌트 수가 많아지면서, 특히 장바구니 기능을 만들 때 state를 효율적으로 공유하고 관리하는 데 어려움이 발생",
        solve: "React 전용 상태 관리 도구인 Redux를 도입하여 상태를 구조적으로 관리하고, 컴포넌트 간의 데이터 흐름 일관되게 유지",
        contribution: "100%",
        url: "https://github.com/dann0316/ReactShopProject",
        sample:"/personal/shoeshop.mp4",
    },
    youtubeanalyzer: {
        title: "youtube analyzer",
        description: "React 기반으로 제작한 Youtube 채널 및 영상 데이터를 분석하고, 성과도를 시각화하는 서비스 유튜버 '주언규 PD'의 Viewtrap과 유사한 기능을 구현해보는 개인 프로젝트입니다.",
        date: "2024.11 ~ 2024.12",
        function: "유튜브 영상 검색 및 조회수 / 좋아요 / 댓글 수 조회 (키워드 및 제목으로 검색), 조회수 대비 구독자 수, 업로드일 기준 조회 속도, 시청 지속율, 참여율(댓글, 좋아요) 등을 분석하여 성과도 점수화, 성과도 평가, 자동완성 기능 (검색어 추천), 검색 키워드 기반 검색 및 영상 제목 검색 지원",
        skill: "프론트 엔드: React / 백 엔드: Node.js(Express) / Data: YouTube API / 빌드 도구: CRA / API 통신 도구: Fetch API",
        problem: "Viewtrap처럼 각 영상들의 성과를 판단하는 과정에서 어떤 요소를 기준으로 점수를 부여해야 할지 명확하지 않음 / 성과도 산정에 중요한 평균 시청 지속률, 노출 클릭율, 해시태그 등의 정보는 YouTube 공식 API에서 제공되지 않음",
        solve: "유튜브가 좋은 영상을 어떻게 결정하는 지 공부하고, 영상 별 성과를 자체적으로 산정하는 로직을(조회수/구독자 비율, 구독자 수, 업로드 일, 참여율 등) 설계해 적절한 가중치로 영상의 성과도 점수를 설정 / 모든 영상의 시청 지속률을 영상 총 길이의 40% 로 가정하여 대체하였고 그 외 정보는 웹 크롤링 방식으로 가져올 수 있도록 방향 수립 중",
        contribution: "100%",
        url: "https://github.com/dann0316/YoutubeAnalyzer",
        sample:"/personal/youtubeanalyzer.mp4",
    },
    writeanything: {
        title: "write anything",
        description: "Next.js 기반의 커뮤니티 웹 서비스입니다. 사용자는 소셜 로그인 또는 ID/PW 방식으로 회원가입 및 로그인이 가능하며, 로그인한 유저는 본인의 게시글을 작성·수정·삭제할 수 있고, 다른 사용자의 글에는 댓글을 남길 수 있는 기본적인 커뮤니티 기능을 제공합니다.",
        date: "2024.02 ~ 2024.04",
        function: "회원가입, 소셜 로그인, ID/PW 로그인, 로그아웃, 글 발행, 글 수정, 글 목록, (댓글 발행, 댓글 수정, 댓글 삭제 기능 현재 추가 중)",
        skill: "프론트 엔드: Next.js, Tailwind / 백 엔드: Next.js / DB: MongoDB / 빌드 도구: CNA / API 통신 도구: Fetch API",
        problem: "",
        solve: "",
        contribution: "100%",
        url: "https://github.com/dann0316/WriteAnything",
        sample:"/personal/writeanything.mp4",
    },
    portpolio: {
        title: "portpolio",
        description: "포트폴리오 웹사이트입니다. 전체 구성은 Home, Projects, About 3개의 페이지로 이루어져 있으며, 각 페이지마다 목적에 맞는 핵심 문구와 필수 기능을 간결하게 담았습니다. 또한 페이지 전환 및 주요 요소에 Framer Motion을 활용해 간단한 (인터랙션) 애니메이션도 직접 구현하였습니다.",
        date: "2024.04 ~ 2024.05",
        function: "인삿말,text 애니메이션, 프로젝트 필터링, 상세 페이지 이동[Dynamic Route], 자기소개 및 연락처 링크",
        skill: "프론트엔드: Nextjs, Tailwind, Framer motion / 빌드 도구: CNA",
        problem: "Framer animation 사용 중에 Math.random() 값으로 인한 hydration 오류가 계속 발생함",
        solve: "무작위 값 대신 고정 값으로 대체",
        contribution: "100%",
        url: "https://github.com/dann0316/PortpolioProject",
        sample:"/personal/portpolio.png",
    },
    clothesbyweather: {
        title: "clothesbyweather",
        description: "ChatGPT API와 기상청 공공 데이터 API를 활용하여 ‘현재 날씨 기반 옷 추천’, ‘하루 옷차림 추천’, ‘일주일 기상 요약’ 기능을 제공",
        date: "2024.05 ~ 2024.06",
        function: "현재 날씨 기반 옷 추천, 하우 옷차림 추천, 일주일 기상 요약, 계절별 테마 설정",
        skill: "프론트엔드: React, Tailwind, Framer motion / 백엔드: Node.js(Express) / Data: 기상청 공공 Data API, ChatGPT API / 빌드 도구: VITE / API 통신 도구: Axios",
        problem: "브라우저의 CORS 정책으로 인한 API 호출 제한 / PT API의 응답 횟수 제한 및 유료화 / 모델 선택 오류",
        solve: "프록시 서버 구축으로 해결 / 요청 간격 조절과 약간의 과금으로 대응 / 모델 설정 검토로 대응",
        contribution: "100%",
        url: "https://github.com/dann0316/ClothesByWeather",
        sample:"/personal/clothesbyweather.png",
    },
};